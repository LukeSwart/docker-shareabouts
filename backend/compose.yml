version: '2'
services:
  backups:
    image: kartoza/pg-backup:9.4
    hostname: localhost
    volumes:
      - ~/postgres_data/smartercleanup-backups:/backups
    links:
      - postgis:backup-db
    restart: always
    env_file: ./.backups-env
  
  postgis:
    image: kartoza/postgis:9.4-2.1
    volumes:
      - ~/postgres_data/smartercleanup-api:/var/lib/postgresql
      - ./start-postgis.sh:/start-postgis.sh
    ports:
      - 25432:5432
    env_file: ./.postgis-env
    restart: always
    command: sh -c "echo \"host all all 0.0.0.0/0 md5\" >> /etc/postgresql/9.4/main/pg_hba.conf && /start-postgis.sh"
  
  smartercleanup-api:
    image: smartercleanup/api:release-0.6.2
    depends_on:
      - postgis
    restart: always
    env_file: ./.env
    command: sh -c "git fetch && git checkout lukeswart/1.7-dependencies-upgrade && git pull --rebase && /api/start.sh"

  letsencrypt:
    image: quay.io/letsencrypt/letsencrypt:latest
    # command:  bash -c "sleep 6 && letsencrypt certonly --standalone -d dev-api2.heyduwamish.org --text --agree-tos --email luke@smartercleanup.org --rsa-key-size 4096 --verbose --renew-by-default --standalone-supported-challenges http-01 && sleep 60"
    # Use this for generating test certs (adds `--test-cert` flag):
    command: bash -c "sleep 6 && letsencrypt certonly --test-cert --standalone -d dev-api2.heyduwamish.org --text --agree-tos --email luke@smartercleanup.org --rsa-key-size 4096 --verbose --renew-by-default --standalone-supported-challenges http-01 && sleep 60"
    entrypoint: ""
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
    ports:
      - "80"
      - "443"
    environment:
      - TERM=xterm
  
  nginx:
    image: lukeswart/nginx-letsencrypt
    volumes:
      - ./nginx-acme-challenge-envsubst.conf:/etc/nginx/nginx.conf
      - ./nginx-envsubst.conf:/etc/nginx/nginx-secure.conf
    links:
      - smartercleanup-api
    volumes_from:
      - smartercleanup-api
      - letsencrypt
    environment:
      - MY_DOMAIN_NAME=${MY_DOMAIN_NAME}
    ports:
      - 80:80
      - 443:443
    restart: always
