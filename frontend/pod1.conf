worker_processes 1;
error_log stderr notice;

events {
    worker_connections 1024;
}

http {

    include /etc/nginx/mime.types;
    charset utf-8;

    ##
    # Logging Settings
    ##

    proxy_set_header Host $host;

    gzip_static on;
    gzip on;
    gzip_min_length  1100;
    gzip_buffers  4 32k;
    gzip_types    text/plain application/x-javascript text/xml text/css;
    gzip_vary on;

    # TODO: move these server blocks into modules, and 'include' them:
    # include vhosts/*.conf;

    # Our default response is a 444 (ie if no other request is matched):
    server {
        listen 80 default_server;
        return 444;
    }
    ############################################################################
    # HTTPS BLOCKS
    ############################################################################
    # forward all http requests to https for our ssl domains:
    server {
        listen 80;
        server_name ${DOMAINS};

        location /.well-known/acme-challenge {
            proxy_pass http://letsencrypt:80;
            proxy_set_header Host            $host;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Proto https;
        }

        location / {
            return         301 https://$server_name$request_uri;
        }
    }

    server {
        listen 443;
        server_name dev2.heyduwamish.org;

        # listen 443;
        ssl on;
        ssl_certificate /etc/letsencrypt/live/${MY_DOMAIN_NAME}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${MY_DOMAIN_NAME}/privkey.pem;

        location /static/ {
            root /duwamish_dev;
            try_files $uri $uri/;
        }
        location / {
            proxy_pass http://duwamish-dev:8000;
        }

    }
    ############################################################################
    # HTTP BLOCKS
    ############################################################################
    # Forward all remaining https requests to http (once on ssl, we should have
    # any of these left):
    server {
        listen 443;
        server_name _;

        ssl on;
        ssl_certificate /etc/letsencrypt/live/${MY_DOMAIN_NAME}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${MY_DOMAIN_NAME}/privkey.pem;

        location /.well-known/acme-challenge {
            proxy_pass http://letsencrypt:80;
            proxy_set_header Host            $host;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Proto https;
        }

        location / {
            return         http://$server_name$request_uri;
        }
    }

    server {
        listen 80;
        server_name dev.heyduwamish.org;

        location /static/ {
            root /duwamish_dev;
            try_files $uri $uri/;
        }
        location / {
            proxy_pass http://duwamish-dev:8000;
        }

    }
    server {
        listen 80;
        server_name dev3.heyduwamish.org;

        location /static/ {
            root /pboakland_dev;
            try_files $uri $uri/;
        }
        location / {
            proxy_pass http://pboakland-dev:8000;
        }
    }
    server {
        listen 80;
        server_name cps.haxgeo.com;

        location /static/ {
            root /central-puget-sound;
            try_files $uri $uri/;
        }
        location / {
            proxy_pass http://central-puget-sound:8000;
        }

    }
    server {
        listen 80;
        server_name rail.haxgeo.com *.narprail.org;

        location /static/ {
            root /rail;
            try_files $uri $uri/;
        }
        location / {
            proxy_pass http://rail:8000;
        }
    }
    server {
        listen 80;
        server_name pugetsound.haxgeo.com;

        location /static/ {
            root /pugetsound;
            try_files $uri $uri/;
        }
        location / {
            proxy_pass http://pugetsound:8000;
        }
    }
    server {
        listen 80;
        server_name greensboropb.haxgeo.com;

        location /static/ {
            root /greensboropb;
            try_files $uri $uri/;
        }
        location / {
            proxy_pass http://greensboropb:8000;
        }
    }
}
